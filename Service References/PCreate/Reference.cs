//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SvcCall.PCreate {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientExistsException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class PatientExistsException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SvcCall.PCreate.Patient[] ExistingPatientsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SvcCall.PCreate.Patient[] ExistingPatients {
            get {
                return this.ExistingPatientsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExistingPatientsField, value) != true)) {
                    this.ExistingPatientsField = value;
                    this.RaisePropertyChanged("ExistingPatients");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class Patient : SvcCall.PCreate.Auditable {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PatientsBirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientsSexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientBirthDateStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<System.DateTime> PatientsBirthDate {
            get {
                return this.PatientsBirthDateField;
            }
            set {
                if ((this.PatientsBirthDateField.Equals(value) != true)) {
                    this.PatientsBirthDateField = value;
                    this.RaisePropertyChanged("PatientsBirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PatientsSex {
            get {
                return this.PatientsSexField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientsSexField, value) != true)) {
                    this.PatientsSexField = value;
                    this.RaisePropertyChanged("PatientsSex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PatientBirthDateString {
            get {
                return this.PatientBirthDateStringField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientBirthDateStringField, value) != true)) {
                    this.PatientBirthDateStringField = value;
                    this.RaisePropertyChanged("PatientBirthDateString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auditable", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SvcCall.PCreate.Patient))]
    public partial class Auditable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UnconfiguredWebServiceException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class UnconfiguredWebServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReasonField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidParameterException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class InvalidParameterException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Parameter {
            get {
                return this.ParameterField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterField, value) != true)) {
                    this.ParameterField = value;
                    this.RaisePropertyChanged("Parameter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PatientNotFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class PatientNotFoundException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RefractionException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class RefractionException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoStudyFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class NoStudyFoundException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientId {
            get {
                return this.PatientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIdField, value) != true)) {
                    this.PatientIdField = value;
                    this.RaisePropertyChanged("PatientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyNotFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class StudyNotFoundException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StudyIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudyId {
            get {
                return this.StudyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyIdField, value) != true)) {
                    this.StudyIdField = value;
                    this.RaisePropertyChanged("StudyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PdfException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
    [System.SerializableAttribute()]
    public partial class PdfException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:schemas-csoitalia-it:pcreatesvc-v10", ConfigurationName="PCreate.IHttpCreate")]
    public interface IHttpCreate {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/CreatePatient", ReplyAction="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/CreatePatientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.PatientExistsException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/CreatePatientPatientExistsExc" +
            "eptionFault", Name="PatientExistsException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.UnconfiguredWebServiceException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/CreatePatientUnconfiguredWebS" +
            "erviceExceptionFault", Name="UnconfiguredWebServiceException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.InvalidParameterException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/CreatePatientInvalidParameter" +
            "ExceptionFault", Name="InvalidParameterException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        void CreatePatient(string IdIssuer, string PatientId, string FirstName, string LastName, string Gender, System.DateTime BirthDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/ScheduleProcedure", ReplyAction="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/ScheduleProcedureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.PatientNotFoundException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/ScheduleProcedurePatientNotFo" +
            "undExceptionFault", Name="PatientNotFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.InvalidParameterException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/ScheduleProcedureInvalidParam" +
            "eterExceptionFault", Name="InvalidParameterException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.UnconfiguredWebServiceException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/ScheduleProcedureUnconfigured" +
            "WebServiceExceptionFault", Name="UnconfiguredWebServiceException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        string ScheduleProcedure(string PatientId, System.DateTime StudyDate, string AccessionNumber, string ReferringPhysician, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefraction", ReplyAction="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.RefractionException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionRefractionExcept" +
            "ionFault", Name="RefractionException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.NoStudyFoundException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionNoStudyFoundExce" +
            "ptionFault", Name="NoStudyFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.UnconfiguredWebServiceException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionUnconfiguredWebS" +
            "erviceExceptionFault", Name="UnconfiguredWebServiceException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.InvalidParameterException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionInvalidParameter" +
            "ExceptionFault", Name="InvalidParameterException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.PatientNotFoundException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IPCreateSvc/AddRefractionPatientNotFoundE" +
            "xceptionFault", Name="PatientNotFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        void AddRefraction(string PatientId, float SphOD, float CylOD, int AxOD, string UcVAOD, string BCVAOD, float SphOS, float CylOS, int AxOS, string UcVAOS, string BCVAOS, float CVDOD, float CVDOS);
        
        // CODEGEN: Generating message contract since the operation AddReport is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReport", ReplyAction="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.InvalidParameterException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReportInvalidParameterExce" +
            "ptionFault", Name="InvalidParameterException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.UnconfiguredWebServiceException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReportUnconfiguredWebServi" +
            "ceExceptionFault", Name="UnconfiguredWebServiceException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.StudyNotFoundException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReportStudyNotFoundExcepti" +
            "onFault", Name="StudyNotFoundException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        [System.ServiceModel.FaultContractAttribute(typeof(SvcCall.PCreate.PdfException), Action="urn:schemas-csoitalia-it:pcreatesvc-v10/IHttpCreate/AddReportPdfExceptionFault", Name="PdfException", Namespace="urn:schemas-csoitalia-it:phoenix-dt-v10")]
        SvcCall.PCreate.AddReportResponse AddReport(SvcCall.PCreate.ReportMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:schemas-csoitalia-it:pcreatesvc-v10")]
        public string StudyId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:schemas-csoitalia-it:pcreatesvc-v10")]
        public string Title;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:schemas-csoitalia-it:pcreatesvc-v10", Order=0)]
        public System.IO.Stream Pdf;
        
        public ReportMessage() {
        }
        
        public ReportMessage(string StudyId, string Title, System.IO.Stream Pdf) {
            this.StudyId = StudyId;
            this.Title = Title;
            this.Pdf = Pdf;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddReportResponse {
        
        public AddReportResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHttpCreateChannel : SvcCall.PCreate.IHttpCreate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HttpCreateClient : System.ServiceModel.ClientBase<SvcCall.PCreate.IHttpCreate>, SvcCall.PCreate.IHttpCreate {
        
        public HttpCreateClient() {
        }
        
        public HttpCreateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HttpCreateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HttpCreateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HttpCreateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreatePatient(string IdIssuer, string PatientId, string FirstName, string LastName, string Gender, System.DateTime BirthDate) {
            base.Channel.CreatePatient(IdIssuer, PatientId, FirstName, LastName, Gender, BirthDate);
        }
        
        public string ScheduleProcedure(string PatientId, System.DateTime StudyDate, string AccessionNumber, string ReferringPhysician, string Description) {
            return base.Channel.ScheduleProcedure(PatientId, StudyDate, AccessionNumber, ReferringPhysician, Description);
        }
        
        public void AddRefraction(string PatientId, float SphOD, float CylOD, int AxOD, string UcVAOD, string BCVAOD, float SphOS, float CylOS, int AxOS, string UcVAOS, string BCVAOS, float CVDOD, float CVDOS) {
            base.Channel.AddRefraction(PatientId, SphOD, CylOD, AxOD, UcVAOD, BCVAOD, SphOS, CylOS, AxOS, UcVAOS, BCVAOS, CVDOD, CVDOS);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SvcCall.PCreate.AddReportResponse SvcCall.PCreate.IHttpCreate.AddReport(SvcCall.PCreate.ReportMessage request) {
            return base.Channel.AddReport(request);
        }
        
        public void AddReport(string StudyId, string Title, System.IO.Stream Pdf) {
            SvcCall.PCreate.ReportMessage inValue = new SvcCall.PCreate.ReportMessage();
            inValue.StudyId = StudyId;
            inValue.Title = Title;
            inValue.Pdf = Pdf;
            SvcCall.PCreate.AddReportResponse retVal = ((SvcCall.PCreate.IHttpCreate)(this)).AddReport(inValue);
        }
    }
}
